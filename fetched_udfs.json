{
    "5608": {
        "args": [
            {
                "data_type": "LINE",
                "name": "previous_line",
                "value": "Sender Email Address@0"
            }
        ],
        "code": "\t# Import Python packages\n\t# import json\n\t\n\t# Log statements using print()\n\t# print(\"This will appear in the logs\")\n\t\n\t# Return the cleaned output\n\treturn previous_line",
        "docstring": null,
        "lambda_end_of_life": null,
        "lambda_id": "9",
        "lambda_udf_id": "v1:AWS_LAMBDA:2067287301:insaprd-use2-aihub-prd-docker-default-udf:8",
        "last_updated_at": "1737009885000",
        "name": "unnamed_custom_function",
        "udf_type": "REFINER"
    },
    "5609": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Name_of_Sender",
                "value": "Name of Sender"
            }
        ],
        "code": "    import re\n    if not re.match('^[A-Za-z\\\\s]+$', Name_of_Sender):\n        return \"Invalid 'Name of Sender': must not contain numbers or special characters.\"\n    return None",
        "docstring": "    Validates that 'Name of Sender' does not contain any numbers or special characters.\n\n    Args:\n    Name_of_Sender (str): The name of the sender which should only contain alphabetic characters and spaces.\n    context (optional): Additional context for validation, default is None.\n    **kwargs: Additional keyword arguments.\n\n    Returns:\n    str: Specific and relevant error message if validation fails, otherwise None.",
        "lambda_end_of_life": null,
        "lambda_id": "9",
        "lambda_udf_id": "v1:AWS_LAMBDA:1519220644:insaprd-use2-aihub-prd-docker-default-udf:8",
        "last_updated_at": "1737010358000",
        "name": "validate_name_of_sender",
        "udf_type": "VALIDATIONS"
    },
    "5610": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Sender_Email_Address",
                "value": "Sender Email Address"
            }
        ],
        "code": "    import re\n    email_pattern = '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\\\.[a-zA-Z]{2,}$'\n    consecutive_dots_pattern = '\\\\.\\\\.'\n    if not re.match(email_pattern, Sender_Email_Address):\n        return 'Invalid email address format'\n    if re.search(consecutive_dots_pattern, Sender_Email_Address):\n        return 'Invalid email address format'\n    return None",
        "docstring": "    Sender Email Address: A valid email address should follow the format: username@domain.extension\n    This function validates the given email address and returns a specific error message if the validation fails.\n    If the email address is valid, it returns None.",
        "lambda_end_of_life": null,
        "lambda_id": "9",
        "lambda_udf_id": "v1:AWS_LAMBDA:6273383353:insaprd-use2-aihub-prd-docker-default-udf:8",
        "last_updated_at": "1737010817000",
        "name": "validate_sender_email_address",
        "udf_type": "VALIDATIONS"
    },
    "5611": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Outstanding_Claim",
                "value": "Outstanding Claim"
            }
        ],
        "code": "    import re\n    pattern = '^(?:\\\\$|Rs\\\\.)?\\\\s?(\\\\d{1,3}(,\\\\d{3})*|\\\\d+)(\\\\.\\\\d{2})?$'\n    if not re.match(pattern, outstanding_claim):\n        return 'Invalid Outstanding Claim amount'\n    return None",
        "docstring": "    Validate Outstanding Claim\n    The amount should be a valid numerical value, typically formatted as a number with or without commas and decimal points (e.g., $1,234.56, 1234.56, or 1,234).\n    The extracted amount should represent a monetary value. The function returns a specific error message if the validation fails, otherwise returns None.\n    \n    Parameters:\n    outstanding_claim (str): The outstanding claim amount as a string.\n    context (optional): Additional context for validation, default is None.\n    **kwargs: Additional keyword arguments.\n    \n    Returns:\n    str: Error message if validation fails, otherwise None.",
        "lambda_end_of_life": null,
        "lambda_id": "9",
        "lambda_udf_id": "v1:AWS_LAMBDA:1295917149:insaprd-use2-aihub-prd-docker-default-udf:8",
        "last_updated_at": "1737011058000",
        "name": "validate_outstanding_claim",
        "udf_type": "VALIDATIONS"
    },
    "5612": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Outstanding_Claim",
                "value": "Outstanding Claim"
            }
        ],
        "code": "    import re\n    if not isinstance(outstanding_claim, str):\n        return 'Outstanding Claim must be a string.'\n    pattern = '^(Rs\\\\. \\\\d{1,3}(,\\\\d{3})*|\\\\$\\\\d{1,3}(,\\\\d{3})*(\\\\.\\\\d{2})?)$'\n    if not re.match(pattern, outstanding_claim):\n        return 'Outstanding Claim must be a valid monetary value.'\n    return None",
        "docstring": "    Validates the 'Outstanding Claim' field to ensure it represents a monetary value.\n    \n    Fields:\n    - outstanding_claim: A string representing the monetary value of the outstanding claim. \n      Expected formats include:\n      * 'Rs. 11,200'\n      * '$ 5200'\n      * '$4,500.00'\n    \n    Returns:\n    - A string with a specific and relevant error message if validation fails.\n    - None if validation passes.",
        "lambda_end_of_life": null,
        "lambda_id": "9",
        "lambda_udf_id": "v1:AWS_LAMBDA:2196142532:insaprd-use2-aihub-prd-docker-default-udf:8",
        "last_updated_at": "1737011222000",
        "name": "validate_outstanding_claim",
        "udf_type": "VALIDATIONS"
    },
    "5613": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Name_of_Sender",
                "value": "Name of Sender"
            }
        ],
        "code": "    import re\n    if re.search('[^a-zA-Z.\\\\s]', name_of_sender):\n        return \"Invalid 'Name of Sender': must not contain numbers or special characters excluding '.'\"\n    return None",
        "docstring": "    Validates that 'Name of Sender' does not contain any numbers or special characters excluding \".\".\n\n    Args:\n    name_of_sender (str): The name of the sender to be validated.\n    context: Additional context (default is None).\n    **kwargs: Additional keyword arguments.\n\n    Returns:\n    str: Specific and relevant error message if validation fails, otherwise None.",
        "lambda_end_of_life": null,
        "lambda_id": "9",
        "lambda_udf_id": "v1:AWS_LAMBDA:6633100388:insaprd-use2-aihub-prd-docker-default-udf:8",
        "last_updated_at": "1737011606000",
        "name": "validate_name_of_sender",
        "udf_type": "VALIDATIONS"
    },
    "5614": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Name_of_Sender",
                "value": "Name of Sender"
            }
        ],
        "code": "    import re\n    if re.search('\\\\d', Name_of_Sender):\n        return \"Error: 'Name of Sender' should not contain any numbers.\"\n    return None",
        "docstring": "    Validates that 'Name of Sender' does not contain any numbers.\n\n    Args:\n        Name_of_Sender (str): The name of the sender which should not contain any numbers.\n        context: Additional context (default is None).\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        str: Specific and relevant error message if validation fails, otherwise None.",
        "lambda_end_of_life": null,
        "lambda_id": "9",
        "lambda_udf_id": "v1:AWS_LAMBDA:8741867839:insaprd-use2-aihub-prd-docker-default-udf:8",
        "last_updated_at": "1737011659000",
        "name": "validate_name_of_sender",
        "udf_type": "VALIDATIONS"
    },
    "5615": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Recipient_Address",
                "value": "Recipient Address"
            }
        ],
        "code": "    import re\n    if not isinstance(Recipient_Address, str):\n        return 'Recipient Address must be a string.'\n    address_pattern = re.compile('^\\\\d+\\\\s+[\\\\w\\\\s]+,\\\\s*[\\\\w\\\\s]+,\\\\s*[\\\\w\\\\s]+(?:,\\\\s*\\\\d{5})?$')\n    if not address_pattern.match(Recipient_Address):\n        return 'Invalid Recipient Address format.'\n    return None",
        "docstring": "    Validates the 'Recipient Address' field.\n\n    Fields:\n    - Recipient_Address: A string representing the recipient's address. Expected format includes street address, city, state, and possibly postal code.\n\n    The function checks if the 'Recipient Address' field contains a valid address format. If the validation fails, it returns a specific error message. If it passes, it returns None.",
        "lambda_end_of_life": null,
        "lambda_id": "9",
        "lambda_udf_id": "v1:AWS_LAMBDA:2163789682:insaprd-use2-aihub-prd-docker-default-udf:8",
        "last_updated_at": "1737012860000",
        "name": "validate_recipient_address",
        "udf_type": "VALIDATIONS"
    },
    "5636": {
        "args": [
            {
                "data_type": "FIELD",
                "name": "Sender_Contact_Number",
                "value": "Sender Contact Number"
            }
        ],
        "code": "    import re\n    pattern = '^\\\\+?\\\\d{1,3} \\\\d{10}$'\n    if not re.match(pattern, Sender_Contact_Number):\n        return 'Invalid Sender Contact Number. It should include only digits and, if applicable, the country code (e.g., +1 1234567890). Avoid special characters, except a leading \u2018+\u2019 for the country code.'\n    return None",
        "docstring": "    Validate the 'Sender Contact Number' field.\n\n    Args:\n        Sender_Contact_Number (str): The contact number to validate. It should include only digits and, if applicable, the country code (e.g., +1 1234567890). Avoid special characters, except a leading \u2018+\u2019 for the country code.\n        context (optional): Additional context for validation. Default is None.\n        **kwargs: Additional keyword arguments.\n\n    Returns:\n        str: Specific and relevant error message if validation fails. None if validation passes.",
        "lambda_end_of_life": null,
        "lambda_id": "9",
        "lambda_udf_id": "v1:AWS_LAMBDA:2326677345:insaprd-use2-aihub-prd-docker-default-udf:8",
        "last_updated_at": "1737093423000",
        "name": "validate_sender_contact_number",
        "udf_type": "VALIDATIONS"
    }
}